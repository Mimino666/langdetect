import unittest

import six

from langdetect.utils.ngram import NGram


class NGramTest(unittest.TestCase):
    def test_constants(self):
        self.assertEqual(NGram.N_GRAM, 3)

    def test_normalize_with_latin(self):
        self.assertEqual(NGram.normalize('\u0000'), ' ')
        self.assertEqual(NGram.normalize('\u0009'), ' ')
        self.assertEqual(NGram.normalize('\u0020'), ' ')
        self.assertEqual(NGram.normalize('\u0030'), ' ')
        self.assertEqual(NGram.normalize('\u0040'), ' ')
        self.assertEqual(NGram.normalize('\u0041'), '\u0041')
        self.assertEqual(NGram.normalize('\u005a'), '\u005a')
        self.assertEqual(NGram.normalize('\u005b'), ' ')
        self.assertEqual(NGram.normalize('\u0060'), ' ')
        self.assertEqual(NGram.normalize('\u0061'), '\u0061')
        self.assertEqual(NGram.normalize('\u007a'), '\u007a')
        self.assertEqual(NGram.normalize('\u007b'), ' ')
        self.assertEqual(NGram.normalize('\u007f'), ' ')
        self.assertEqual(NGram.normalize('\u0080'), '\u0080')
        self.assertEqual(NGram.normalize('\u00a0'), ' ')
        self.assertEqual(NGram.normalize('\u00a1'), '\u00a1')

    def test_normalize_with_cjk_kanji(self):
        self.assertEqual(NGram.normalize('\u4E00'), '\u4E00')
        self.assertEqual(NGram.normalize('\u4E01'), '\u4E01')
        self.assertEqual(NGram.normalize('\u4E02'), '\u4E02')
        self.assertEqual(NGram.normalize('\u4E03'), '\u4E01')
        self.assertEqual(NGram.normalize('\u4E04'), '\u4E04')
        self.assertEqual(NGram.normalize('\u4E05'), '\u4E05')
        self.assertEqual(NGram.normalize('\u4E06'), '\u4E06')
        self.assertEqual(NGram.normalize('\u4E07'), '\u4E07')
        self.assertEqual(NGram.normalize('\u4E08'), '\u4E08')
        self.assertEqual(NGram.normalize('\u4E09'), '\u4E09')
        self.assertEqual(NGram.normalize('\u4E10'), '\u4E10')
        self.assertEqual(NGram.normalize('\u4E11'), '\u4E11')
        self.assertEqual(NGram.normalize('\u4E12'), '\u4E12')
        self.assertEqual(NGram.normalize('\u4E13'), '\u4E13')
        self.assertEqual(NGram.normalize('\u4E14'), '\u4E14')
        self.assertEqual(NGram.normalize('\u4E15'), '\u4E15')
        self.assertEqual(NGram.normalize('\u4E1e'), '\u4E1e')
        self.assertEqual(NGram.normalize('\u4E1f'), '\u4E1f')
        self.assertEqual(NGram.normalize('\u4E20'), '\u4E20')
        self.assertEqual(NGram.normalize('\u4E21'), '\u4E21')
        self.assertEqual(NGram.normalize('\u4E22'), '\u4E22')
        self.assertEqual(NGram.normalize('\u4E23'), '\u4E23')
        self.assertEqual(NGram.normalize('\u4E24'), '\u4E13')
        self.assertEqual(NGram.normalize('\u4E25'), '\u4E13')
        self.assertEqual(NGram.normalize('\u4E30'), '\u4E30')

    def test_normalize_for_romanian(self):
        self.assertEqual(NGram.normalize('\u015f'), '\u015f')
        self.assertEqual(NGram.normalize('\u0163'), '\u0163')
        self.assertEqual(NGram.normalize('\u0219'), '\u015f')
        self.assertEqual(NGram.normalize('\u021b'), '\u0163')

    def test_ngram(self):
        ngram = NGram()
        self.assertIsNone(ngram.get(0))
        self.assertIsNone(ngram.get(1))
        self.assertIsNone(ngram.get(2))
        self.assertIsNone(ngram.get(3))
        self.assertIsNone(ngram.get(4))
        ngram.add_char(' ')
        self.assertIsNone(ngram.get(1))
        self.assertIsNone(ngram.get(2))
        self.assertIsNone(ngram.get(3))
        ngram.add_char('A')
        self.assertEqual(ngram.get(1), 'A')
        self.assertEqual(ngram.get(2), ' A')
        self.assertIsNone(ngram.get(3))
        ngram.add_char('\u06cc')
        self.assertEqual(ngram.get(1), '\u064a')
        self.assertEqual(ngram.get(2), 'A\u064a')
        self.assertEqual(ngram.get(3), ' A\u064a')
        ngram.add_char('\u1ea0')
        self.assertEqual(ngram.get(1), '\u1ec3')
        self.assertEqual(ngram.get(2), '\u064a\u1ec3')
        self.assertEqual(ngram.get(3), 'A\u064a\u1ec3')
        ngram.add_char('\u3044')
        self.assertEqual(ngram.get(1), '\u3042')
        self.assertEqual(ngram.get(2), '\u1ec3\u3042')
        self.assertEqual(ngram.get(3), '\u064a\u1ec3\u3042')

        ngram.add_char('\u30a4')
        self.assertEqual(ngram.get(1), '\u30a2')
        self.assertEqual(ngram.get(2), '\u3042\u30a2')
        self.assertEqual(ngram.get(3), '\u1ec3\u3042\u30a2')
        ngram.add_char('\u3106')
        self.assertEqual(ngram.get(1), '\u3105')
        self.assertEqual(ngram.get(2), '\u30a2\u3105')
        self.assertEqual(ngram.get(3), '\u3042\u30a2\u3105')
        ngram.add_char('\uac01')
        self.assertEqual(ngram.get(1), '\uac00')
        self.assertEqual(ngram.get(2), '\u3105\uac00')
        self.assertEqual(ngram.get(3), '\u30a2\u3105\uac00')
        ngram.add_char('\u2010')
        self.assertIsNone(ngram.get(1))
        self.assertEqual(ngram.get(2), '\uac00 ')
        self.assertEqual(ngram.get(3), '\u3105\uac00 ')

        ngram.add_char('a')
        self.assertEqual(ngram.get(1), 'a')
        self.assertEqual(ngram.get(2), ' a')
        self.assertIsNone(ngram.get(3))

    def test_ngram3(self):
        ngram = NGram()

        ngram.add_char('A')
        self.assertEqual(ngram.get(1), 'A')
        self.assertEqual(ngram.get(2), ' A')
        self.assertIsNone(ngram.get(3))

        ngram.add_char('1')
        self.assertIsNone(ngram.get(1))
        self.assertEqual(ngram.get(2), 'A ')
        self.assertEqual(ngram.get(3), ' A ')

        ngram.add_char('B')
        self.assertEqual(ngram.get(1), 'B')
        self.assertEqual(ngram.get(2), ' B')
        self.assertIsNone(ngram.get(3))

    def test_normalize_vietnamese(self):
        self.assertEqual(NGram.normalize_vi(''), '')
        self.assertEqual(NGram.normalize_vi('ABC'), 'ABC')
        self.assertEqual(NGram.normalize_vi('012'), '012')
        self.assertEqual(NGram.normalize_vi('\u00c0'), '\u00c0')

        self.assertEqual(NGram.normalize_vi('\u0041\u0300'), '\u00C0')
        self.assertEqual(NGram.normalize_vi('\u0045\u0300'), '\u00C8')
        self.assertEqual(NGram.normalize_vi('\u0049\u0300'), '\u00CC')
        self.assertEqual(NGram.normalize_vi('\u004F\u0300'), '\u00D2')
        self.assertEqual(NGram.normalize_vi('\u0055\u0300'), '\u00D9')
        self.assertEqual(NGram.normalize_vi('\u0059\u0300'), '\u1EF2')
        self.assertEqual(NGram.normalize_vi('\u0061\u0300'), '\u00E0')
        self.assertEqual(NGram.normalize_vi('\u0065\u0300'), '\u00E8')
        self.assertEqual(NGram.normalize_vi('\u0069\u0300'), '\u00EC')
        self.assertEqual(NGram.normalize_vi('\u006F\u0300'), '\u00F2')
        self.assertEqual(NGram.normalize_vi('\u0075\u0300'), '\u00F9')
        self.assertEqual(NGram.normalize_vi('\u0079\u0300'), '\u1EF3')
        self.assertEqual(NGram.normalize_vi('\u00C2\u0300'), '\u1EA6')
        self.assertEqual(NGram.normalize_vi('\u00CA\u0300'), '\u1EC0')
        self.assertEqual(NGram.normalize_vi('\u00D4\u0300'), '\u1ED2')
        self.assertEqual(NGram.normalize_vi('\u00E2\u0300'), '\u1EA7')
        self.assertEqual(NGram.normalize_vi('\u00EA\u0300'), '\u1EC1')
        self.assertEqual(NGram.normalize_vi('\u00F4\u0300'), '\u1ED3')
        self.assertEqual(NGram.normalize_vi('\u0102\u0300'), '\u1EB0')
        self.assertEqual(NGram.normalize_vi('\u0103\u0300'), '\u1EB1')
        self.assertEqual(NGram.normalize_vi('\u01A0\u0300'), '\u1EDC')
        self.assertEqual(NGram.normalize_vi('\u01A1\u0300'), '\u1EDD')
        self.assertEqual(NGram.normalize_vi('\u01AF\u0300'), '\u1EEA')
        self.assertEqual(NGram.normalize_vi('\u01B0\u0300'), '\u1EEB')

        self.assertEqual(NGram.normalize_vi('\u0041\u0301'), '\u00C1')
        self.assertEqual(NGram.normalize_vi('\u0045\u0301'), '\u00C9')
        self.assertEqual(NGram.normalize_vi('\u0049\u0301'), '\u00CD')
        self.assertEqual(NGram.normalize_vi('\u004F\u0301'), '\u00D3')
        self.assertEqual(NGram.normalize_vi('\u0055\u0301'), '\u00DA')
        self.assertEqual(NGram.normalize_vi('\u0059\u0301'), '\u00DD')
        self.assertEqual(NGram.normalize_vi('\u0061\u0301'), '\u00E1')
        self.assertEqual(NGram.normalize_vi('\u0065\u0301'), '\u00E9')
        self.assertEqual(NGram.normalize_vi('\u0069\u0301'), '\u00ED')
        self.assertEqual(NGram.normalize_vi('\u006F\u0301'), '\u00F3')
        self.assertEqual(NGram.normalize_vi('\u0075\u0301'), '\u00FA')
        self.assertEqual(NGram.normalize_vi('\u0079\u0301'), '\u00FD')
        self.assertEqual(NGram.normalize_vi('\u00C2\u0301'), '\u1EA4')
        self.assertEqual(NGram.normalize_vi('\u00CA\u0301'), '\u1EBE')
        self.assertEqual(NGram.normalize_vi('\u00D4\u0301'), '\u1ED0')
        self.assertEqual(NGram.normalize_vi('\u00E2\u0301'), '\u1EA5')
        self.assertEqual(NGram.normalize_vi('\u00EA\u0301'), '\u1EBF')
        self.assertEqual(NGram.normalize_vi('\u00F4\u0301'), '\u1ED1')
        self.assertEqual(NGram.normalize_vi('\u0102\u0301'), '\u1EAE')
        self.assertEqual(NGram.normalize_vi('\u0103\u0301'), '\u1EAF')
        self.assertEqual(NGram.normalize_vi('\u01A0\u0301'), '\u1EDA')
        self.assertEqual(NGram.normalize_vi('\u01A1\u0301'), '\u1EDB')
        self.assertEqual(NGram.normalize_vi('\u01AF\u0301'), '\u1EE8')
        self.assertEqual(NGram.normalize_vi('\u01B0\u0301'), '\u1EE9')

        self.assertEqual(NGram.normalize_vi('\u0041\u0303'), '\u00C3')
        self.assertEqual(NGram.normalize_vi('\u0045\u0303'), '\u1EBC')
        self.assertEqual(NGram.normalize_vi('\u0049\u0303'), '\u0128')
        self.assertEqual(NGram.normalize_vi('\u004F\u0303'), '\u00D5')
        self.assertEqual(NGram.normalize_vi('\u0055\u0303'), '\u0168')
        self.assertEqual(NGram.normalize_vi('\u0059\u0303'), '\u1EF8')
        self.assertEqual(NGram.normalize_vi('\u0061\u0303'), '\u00E3')
        self.assertEqual(NGram.normalize_vi('\u0065\u0303'), '\u1EBD')
        self.assertEqual(NGram.normalize_vi('\u0069\u0303'), '\u0129')
        self.assertEqual(NGram.normalize_vi('\u006F\u0303'), '\u00F5')
        self.assertEqual(NGram.normalize_vi('\u0075\u0303'), '\u0169')
        self.assertEqual(NGram.normalize_vi('\u0079\u0303'), '\u1EF9')
        self.assertEqual(NGram.normalize_vi('\u00C2\u0303'), '\u1EAA')
        self.assertEqual(NGram.normalize_vi('\u00CA\u0303'), '\u1EC4')
        self.assertEqual(NGram.normalize_vi('\u00D4\u0303'), '\u1ED6')
        self.assertEqual(NGram.normalize_vi('\u00E2\u0303'), '\u1EAB')
        self.assertEqual(NGram.normalize_vi('\u00EA\u0303'), '\u1EC5')
        self.assertEqual(NGram.normalize_vi('\u00F4\u0303'), '\u1ED7')
        self.assertEqual(NGram.normalize_vi('\u0102\u0303'), '\u1EB4')
        self.assertEqual(NGram.normalize_vi('\u0103\u0303'), '\u1EB5')
        self.assertEqual(NGram.normalize_vi('\u01A0\u0303'), '\u1EE0')
        self.assertEqual(NGram.normalize_vi('\u01A1\u0303'), '\u1EE1')
        self.assertEqual(NGram.normalize_vi('\u01AF\u0303'), '\u1EEE')
        self.assertEqual(NGram.normalize_vi('\u01B0\u0303'), '\u1EEF')

        self.assertEqual(NGram.normalize_vi('\u0041\u0309'), '\u1EA2')
        self.assertEqual(NGram.normalize_vi('\u0045\u0309'), '\u1EBA')
        self.assertEqual(NGram.normalize_vi('\u0049\u0309'), '\u1EC8')
        self.assertEqual(NGram.normalize_vi('\u004F\u0309'), '\u1ECE')
        self.assertEqual(NGram.normalize_vi('\u0055\u0309'), '\u1EE6')
        self.assertEqual(NGram.normalize_vi('\u0059\u0309'), '\u1EF6')
        self.assertEqual(NGram.normalize_vi('\u0061\u0309'), '\u1EA3')
        self.assertEqual(NGram.normalize_vi('\u0065\u0309'), '\u1EBB')
        self.assertEqual(NGram.normalize_vi('\u0069\u0309'), '\u1EC9')
        self.assertEqual(NGram.normalize_vi('\u006F\u0309'), '\u1ECF')
        self.assertEqual(NGram.normalize_vi('\u0075\u0309'), '\u1EE7')
        self.assertEqual(NGram.normalize_vi('\u0079\u0309'), '\u1EF7')
        self.assertEqual(NGram.normalize_vi('\u00C2\u0309'), '\u1EA8')
        self.assertEqual(NGram.normalize_vi('\u00CA\u0309'), '\u1EC2')
        self.assertEqual(NGram.normalize_vi('\u00D4\u0309'), '\u1ED4')
        self.assertEqual(NGram.normalize_vi('\u00E2\u0309'), '\u1EA9')
        self.assertEqual(NGram.normalize_vi('\u00EA\u0309'), '\u1EC3')
        self.assertEqual(NGram.normalize_vi('\u00F4\u0309'), '\u1ED5')
        self.assertEqual(NGram.normalize_vi('\u0102\u0309'), '\u1EB2')
        self.assertEqual(NGram.normalize_vi('\u0103\u0309'), '\u1EB3')
        self.assertEqual(NGram.normalize_vi('\u01A0\u0309'), '\u1EDE')
        self.assertEqual(NGram.normalize_vi('\u01A1\u0309'), '\u1EDF')
        self.assertEqual(NGram.normalize_vi('\u01AF\u0309'), '\u1EEC')
        self.assertEqual(NGram.normalize_vi('\u01B0\u0309'), '\u1EED')

        self.assertEqual(NGram.normalize_vi('\u0041\u0323'), '\u1EA0')
        self.assertEqual(NGram.normalize_vi('\u0045\u0323'), '\u1EB8')
        self.assertEqual(NGram.normalize_vi('\u0049\u0323'), '\u1ECA')
        self.assertEqual(NGram.normalize_vi('\u004F\u0323'), '\u1ECC')
        self.assertEqual(NGram.normalize_vi('\u0055\u0323'), '\u1EE4')
        self.assertEqual(NGram.normalize_vi('\u0059\u0323'), '\u1EF4')
        self.assertEqual(NGram.normalize_vi('\u0061\u0323'), '\u1EA1')
        self.assertEqual(NGram.normalize_vi('\u0065\u0323'), '\u1EB9')
        self.assertEqual(NGram.normalize_vi('\u0069\u0323'), '\u1ECB')
        self.assertEqual(NGram.normalize_vi('\u006F\u0323'), '\u1ECD')
        self.assertEqual(NGram.normalize_vi('\u0075\u0323'), '\u1EE5')
        self.assertEqual(NGram.normalize_vi('\u0079\u0323'), '\u1EF5')
        self.assertEqual(NGram.normalize_vi('\u00C2\u0323'), '\u1EAC')
        self.assertEqual(NGram.normalize_vi('\u00CA\u0323'), '\u1EC6')
        self.assertEqual(NGram.normalize_vi('\u00D4\u0323'), '\u1ED8')
        self.assertEqual(NGram.normalize_vi('\u00E2\u0323'), '\u1EAD')
        self.assertEqual(NGram.normalize_vi('\u00EA\u0323'), '\u1EC7')
        self.assertEqual(NGram.normalize_vi('\u00F4\u0323'), '\u1ED9')
        self.assertEqual(NGram.normalize_vi('\u0102\u0323'), '\u1EB6')
        self.assertEqual(NGram.normalize_vi('\u0103\u0323'), '\u1EB7')
        self.assertEqual(NGram.normalize_vi('\u01A0\u0323'), '\u1EE2')
        self.assertEqual(NGram.normalize_vi('\u01A1\u0323'), '\u1EE3')
        self.assertEqual(NGram.normalize_vi('\u01AF\u0323'), '\u1EF0')
        self.assertEqual(NGram.normalize_vi('\u01B0\u0323'), '\u1EF1')
